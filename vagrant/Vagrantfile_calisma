# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/focal64"
  config.vm.box_download_insecure = true
  config.vm.hostname = "VagrantNuri"
  config.vm.synced_folder ".", "/var/www/html", :mount_options => ["dmode=777", "fmode=666"]
 #config.ssh.username = "vagrant"
 #config.ssh.password = "vagrant"


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "code", "/vagrant_data"
  ###
  ### BU NEDİR????
  ###

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.gui = false
     vb.name = "Websites_Nuri"
     # Customize the amount of memory on the VM:
     vb.memory = "512"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    apt update
    apt upgrade -y
    apt install -y apache2 php mariadb-server mariadb-client
    sudo apt install -y php-pear php-fpm php-dev php-zip php-curl php-xmlrpc php-sqlite3 php-gd php-mysql php-mbstring php-xml libapache2-mod-php
    sudo apt install -y composer vim git
    sudo service apache2 restart
    sudo mysql --user=root --execute="GRANT ALL ON *.* TO 'admin'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION; FLUSH PRIVILEGES;"
    sudo mysql --user=root --execute="use mysql;update user set plugin='' where User='root';flush privileges;"
    sudo mkdir /var/www/html/adminer
    sudo wget --no-check-certificate -O /var/www/html/adminer/index.php https://www.adminer.org/latest.php
    sudo timedatectl set-timezone Europe/Istanbul
    git config --global user.email "nuriakman@gmail.com"
    git config --global user.name  "Nuri Akman"
    sudo mysql_secure_installation
    #sudo tailf /var/log/apache2/error.log
  SHELL
end



# Durum : vagrant status
# Kapat : vagrant halt
# Uyu   : vagrant suspend
# Uyan  : vagrant resume
# Yok Et: vagrant destroy
# Başlat: vagrant up
# Bağlan: vagrant ssh
# Ayarları Yeniden Yükle: vagrant reload --provision
# vagrant box update : Vagrant Box dosyasını güncelle


###    # PHP için ayarlamalarımızı yapalım...
###        echo 'echo "#####################"         >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "# Özel ayarlarımız"            >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "display_startup_errors = On"   >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "display_errors         = Off"  >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "short_open_tag         = On"   >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "opcache.enable         = 0"    >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "upload_max_filesize    = 128M" >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "upload_max_size        = 128M" >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "post_max_size          = 128M" >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "max_input_vars         = 5000" >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "error_reporting            = E_ALL & ~E_DEPRECATED & ~E_STRICT & ~E_NOTICE"  >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "mbstring.language          = Turkish"  >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "mbstring.internal_encoding = UTF-8"    >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        echo 'echo "disable_functions          = exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source"  >> /etc/php5/apache2/conf.d/user.ini' | sudo -s
###        sudo service apache2 restart
###
###    # MySQL için ayarlamalarımızı yapalım...
###        echo 'echo "#####################" >> /etc/mysql/my.cnf'              | sudo -s
###        echo 'echo "# Özel ayarlarımız" >> /etc/mysql/my.cnf'                 | sudo -s
###        echo 'echo "[client]" >> /etc/mysql/my.cnf'                           | sudo -s
###        echo 'echo "default-character-set=utf8" >> /etc/mysql/my.cnf'         | sudo -s
###        echo 'echo "[mysql]" >> /etc/mysql/my.cnf'                            | sudo -s
###        echo 'echo "default-character-set=utf8" >> /etc/mysql/my.cnf'         | sudo -s
###        echo 'echo "[mysqld]" >> /etc/mysql/my.cnf'                           | sudo -s
###        echo 'echo "collation-server = utf8_unicode_ci" >> /etc/mysql/my.cnf' | sudo -s
###        echo 'echo "init-connect=\'SET NAMES utf8\'" >> /etc/mysql/my.cnf'      | sudo -s
###        echo 'echo "character-set-server = utf8" >> /etc/mysql/my.cnf'        | sudo -s
###        sudo service mysql restart
